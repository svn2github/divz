/****************************************************************************
**
** Metadata for MSScriptControl generated by dumpcpp from type library
** C:\WINDOWS\system32\msscript.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_MSSCRIPTCONTROL_NOINLINES
#include "msscriptcontrol.h"

using namespace MSScriptControl;

static const uint qt_meta_data_MSScriptControl__IScriptProcedure[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       3,    10, // methods
       4,    25, // properties
       1,    37, // enums/sets

 // signals: signature, parameters, type, tag, flags
       34, 73, 95, 96, 5,
       97, 122, 127, 128, 5,
       129, 155, 170, 171, 5,

 // slots: signature, parameters, type, tag, flags

 // properties: name, type, flags
       172, 187, 0x01005001, 		 // bool HasReturnValue
       192, 197, 0x0a005001, 		 // QString Name
       205, 213, 0x02005001, 		 // int NumArgs
       217, 225, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       233, 0x0, 2, 41, 

 // enum data: key, value
       253, MSScriptControl::Initialized,
       265, MSScriptControl::Connected,

        0        // eod
};

static const char qt_meta_enumstringdata_MSScriptControl[] = {
    "ScriptControlStates\0"
    ""
    "Initialized\0Connected\0"

};

static const char *qt_meta_stringdata_MSScriptControl__IScriptProcedure() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptProcedure\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    ""
    "HasReturnValue\0bool\0Name\0QString\0NumArgs\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptProcedure::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptProcedure(),
qt_meta_data_MSScriptControl__IScriptProcedure }
};

void *IScriptProcedure::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptProcedure()))
        return static_cast<void*>(const_cast<IScriptProcedure*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__IScriptProcedureCollection[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       4,    10, // methods
       3,    30, // properties
       1,    39, // enums/sets

 // signals: signature, parameters, type, tag, flags
       44, 83, 105, 106, 5,
       107, 132, 137, 138, 5,
       139, 165, 180, 181, 5,

 // slots: signature, parameters, type, tag, flags
       182, 197, 203, 221, 9,

 // properties: name, type, flags
       222, 228, 0x02005001, 		 // int Count
       232, 241, 0x00004001, 		 // IUnknown* _NewEnum
       251, 259, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       267, 0x0, 2, 43, 

 // enum data: key, value
       287, MSScriptControl::Initialized,
       299, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__IScriptProcedureCollection() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptProcedureCollection\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Item(QVariant)\0Index\0IScriptProcedure*\0\0"
    "Count\0int\0_NewEnum\0IUnknown*\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptProcedureCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptProcedureCollection(),
qt_meta_data_MSScriptControl__IScriptProcedureCollection }
};

void *IScriptProcedureCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptProcedureCollection()))
        return static_cast<void*>(const_cast<IScriptProcedureCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__IScriptModule[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       7,    10, // methods
       4,    45, // properties
       1,    57, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 70, 92, 93, 5,
       94, 119, 124, 125, 5,
       126, 152, 167, 168, 5,

 // slots: signature, parameters, type, tag, flags
       169, 186, 191, 192, 9,
       193, 207, 218, 227, 9,
       228, 254, 264, 265, 9,
       266, 293, 318, 327, 9,

 // properties: name, type, flags
       328, 339, 0x00005001, 		 // IDispatch* CodeObject
       350, 355, 0x0a005001, 		 // QString Name
       363, 374, 0x00005001, 		 // IScriptProcedureCollection* Procedures
       402, 410, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       418, 0x0, 2, 61, 

 // enum data: key, value
       438, MSScriptControl::Initialized,
       450, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__IScriptModule() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptModule\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AddCode(QString)\0Code\0\0\0Eval(QString)\0Expression\0QVariant\0\0ExecuteStatement(QString)\0"
    "Statement\0\0\0Run(QString,QVariantList&)\0ProcedureName,Parameters\0QVariant\0\0"
    "CodeObject\0IDispatch*\0Name\0QString\0Procedures\0IScriptProcedureCollection*\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptModule::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptModule(),
qt_meta_data_MSScriptControl__IScriptModule }
};

void *IScriptModule::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptModule()))
        return static_cast<void*>(const_cast<IScriptModule*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__IScriptModuleCollection[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       6,    10, // methods
       3,    40, // properties
       1,    49, // enums/sets

 // signals: signature, parameters, type, tag, flags
       41, 80, 102, 103, 5,
       104, 129, 134, 135, 5,
       136, 162, 177, 178, 5,

 // slots: signature, parameters, type, tag, flags
       179, 192, 197, 212, 11,
       213, 236, 248, 263, 9,
       264, 279, 285, 300, 9,

 // properties: name, type, flags
       301, 307, 0x02005001, 		 // int Count
       311, 320, 0x00004001, 		 // IUnknown* _NewEnum
       330, 338, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       346, 0x0, 2, 53, 

 // enum data: key, value
       366, MSScriptControl::Initialized,
       378, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__IScriptModuleCollection() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptModuleCollection\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Add(QString)\0Name\0IScriptModule*\0\0Add(QString,QVariant&)\0Name,Object\0"
    "IScriptModule*\0\0Item(QVariant)\0Index\0IScriptModule*\0\0"
    "Count\0int\0_NewEnum\0IUnknown*\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptModuleCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptModuleCollection(),
qt_meta_data_MSScriptControl__IScriptModuleCollection }
};

void *IScriptModuleCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptModuleCollection()))
        return static_cast<void*>(const_cast<IScriptModuleCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__IScriptError[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       4,    10, // methods
       9,    30, // properties
       1,    57, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 176, 177, 178, 9,

 // properties: name, type, flags
       179, 186, 0x02005001, 		 // int Column
       190, 202, 0x0a005001, 		 // QString Description
       210, 222, 0x02005001, 		 // int HelpContext
       226, 235, 0x0a005001, 		 // QString HelpFile
       243, 248, 0x02005001, 		 // int Line
       252, 259, 0x02005001, 		 // int Number
       263, 270, 0x0a005001, 		 // QString Source
       278, 283, 0x0a005001, 		 // QString Text
       291, 299, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       307, 0x0, 2, 61, 

 // enum data: key, value
       327, MSScriptControl::Initialized,
       339, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__IScriptError() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptError\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Clear()\0\0\0\0"
    "Column\0int\0Description\0QString\0HelpContext\0int\0HelpFile\0"
    "QString\0Line\0int\0Number\0int\0Source\0QString\0Text\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptError::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptError(),
qt_meta_data_MSScriptControl__IScriptError }
};

void *IScriptError::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptError()))
        return static_cast<void*>(const_cast<IScriptError*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__IScriptControl[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       17,    10, // methods
       11,    95, // properties
       1,    128, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 187, 192, 193, 9,
       194, 224, 236, 237, 11,
       238, 273, 296, 297, 9,
       298, 312, 323, 332, 9,
       333, 359, 369, 370, 9,
       371, 379, 380, 381, 9,
       382, 409, 434, 443, 9,
       444, 461, 469, 470, 9,
       471, 492, 501, 502, 9,
       503, 520, 529, 530, 9,
       531, 561, 567, 568, 9,
       569, 585, 593, 594, 9,
       595, 618, 632, 633, 9,
       634, 646, 647, 648, 9,

 // properties: name, type, flags
       649, 657, 0x01015003, 		 // bool AllowUI
       662, 673, 0x00005001, 		 // IDispatch* CodeObject
       684, 690, 0x00004001, 		 // IScriptError* Error
       704, 713, 0x0a015003, 		 // QString Language
       721, 729, 0x00004001, 		 // IScriptModuleCollection* Modules
       754, 765, 0x00005001, 		 // IScriptProcedureCollection* Procedures
       793, 802, 0x02014003, 		 // int SitehWnd
       806, 812, 0x0201400b, 		 // ScriptControlStates State
       832, 840, 0x02015003, 		 // int Timeout
       844, 858, 0x01015003, 		 // bool UseSafeSubset
       863, 871, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       879, 0x0, 2, 132, 

 // enum data: key, value
       899, MSScriptControl::Initialized,
       911, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__IScriptControl() {
    static const char stringdata0[] = {
    "MSScriptControl::IScriptControl\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AddCode(QString)\0Code\0\0\0AddObject(QString,IDispatch*)\0Name,Object\0"
    "\0\0AddObject(QString,IDispatch*,bool)\0Name,Object,AddMembers\0\0\0Eval(QString)\0Expression\0QVariant\0\0ExecuteStatement(QString)\0Statement\0\0\0Reset()\0\0\0\0Run(QString,QVariantList&)\0ProcedureName,Parameters\0QVariant\0"
    "\0SetAllowUI(bool)\0AllowUI\0\0\0SetLanguage(QString)\0Language\0\0\0SetSitehWnd(int)\0SitehWnd\0\0\0SetState(ScriptControlStates)\0State\0\0\0SetTimeout(int)\0Timeout\0\0\0SetUseSafeSubset(bool)\0UseSafeSubset\0\0\0_AboutBox()\0"
    "\0\0\0"
    "AllowUI\0bool\0CodeObject\0IDispatch*\0Error\0IScriptError*\0Language\0QString\0Modules\0IScriptModuleCollection*\0Procedures\0IScriptProcedureCollection*\0SitehWnd\0int\0State\0ScriptControlStates\0Timeout\0int\0UseSafeSubset\0"
    "bool\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject IScriptControl::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__IScriptControl(),
qt_meta_data_MSScriptControl__IScriptControl }
};

void *IScriptControl::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__IScriptControl()))
        return static_cast<void*>(const_cast<IScriptControl*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__DScriptControlSource[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       5,    10, // methods
       1,    35, // properties
       1,    38, // enums/sets

 // signals: signature, parameters, type, tag, flags
       38, 77, 99, 100, 5,
       101, 126, 131, 132, 5,
       133, 159, 174, 175, 5,

 // slots: signature, parameters, type, tag, flags
       176, 184, 185, 186, 9,
       187, 197, 198, 199, 9,

 // properties: name, type, flags
       200, 208, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       216, 0x0, 2, 42, 

 // enum data: key, value
       236, MSScriptControl::Initialized,
       248, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__DScriptControlSource() {
    static const char stringdata0[] = {
    "MSScriptControl::DScriptControlSource\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Error()\0\0\0\0Timeout()\0\0\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject DScriptControlSource::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__DScriptControlSource(),
qt_meta_data_MSScriptControl__DScriptControlSource }
};

void *DScriptControlSource::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__DScriptControlSource()))
        return static_cast<void*>(const_cast<DScriptControlSource*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__Procedure[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       3,    10, // methods
       3,    25, // properties
       1,    34, // enums/sets

 // signals: signature, parameters, type, tag, flags
       27, 66, 88, 89, 5,
       90, 115, 120, 121, 5,
       122, 148, 163, 164, 5,

 // slots: signature, parameters, type, tag, flags

 // properties: name, type, flags
       165, 180, 0x01005001, 		 // bool HasReturnValue
       185, 190, 0x0a005001, 		 // QString Name
       198, 206, 0x02005001, 		 // int NumArgs

 // enums: name, flags, count, data
       210, 0x0, 2, 38, 

 // enum data: key, value
       230, MSScriptControl::Initialized,
       242, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__Procedure() {
    static const char stringdata0[] = {
    "MSScriptControl::Procedure\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    ""
    "HasReturnValue\0bool\0Name\0QString\0NumArgs\0int\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject Procedure::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__Procedure(),
qt_meta_data_MSScriptControl__Procedure }
};

void *Procedure::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__Procedure()))
        return static_cast<void*>(const_cast<Procedure*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__Procedures[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       4,    10, // methods
       2,    30, // properties
       1,    36, // enums/sets

 // signals: signature, parameters, type, tag, flags
       28, 67, 89, 90, 5,
       91, 116, 121, 122, 5,
       123, 149, 164, 165, 5,

 // slots: signature, parameters, type, tag, flags
       166, 181, 187, 205, 9,

 // properties: name, type, flags
       206, 212, 0x02005001, 		 // int Count
       216, 225, 0x00004001, 		 // IUnknown* _NewEnum

 // enums: name, flags, count, data
       235, 0x0, 2, 40, 

 // enum data: key, value
       255, MSScriptControl::Initialized,
       267, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__Procedures() {
    static const char stringdata0[] = {
    "MSScriptControl::Procedures\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Item(QVariant)\0Index\0IScriptProcedure*\0\0"
    "Count\0int\0_NewEnum\0IUnknown*\0"
    ""
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject Procedures::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__Procedures(),
qt_meta_data_MSScriptControl__Procedures }
};

void *Procedures::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__Procedures()))
        return static_cast<void*>(const_cast<Procedures*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__Module[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       7,    10, // methods
       3,    45, // properties
       1,    54, // enums/sets

 // signals: signature, parameters, type, tag, flags
       24, 63, 85, 86, 5,
       87, 112, 117, 118, 5,
       119, 145, 160, 161, 5,

 // slots: signature, parameters, type, tag, flags
       162, 179, 184, 185, 9,
       186, 200, 211, 220, 9,
       221, 247, 257, 258, 9,
       259, 286, 311, 320, 9,

 // properties: name, type, flags
       321, 332, 0x00005001, 		 // IDispatch* CodeObject
       343, 348, 0x0a005001, 		 // QString Name
       356, 367, 0x00005001, 		 // IScriptProcedureCollection* Procedures

 // enums: name, flags, count, data
       395, 0x0, 2, 58, 

 // enum data: key, value
       415, MSScriptControl::Initialized,
       427, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__Module() {
    static const char stringdata0[] = {
    "MSScriptControl::Module\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AddCode(QString)\0Code\0\0\0Eval(QString)\0Expression\0QVariant\0\0ExecuteStatement(QString)\0"
    "Statement\0\0\0Run(QString,QVariantList&)\0ProcedureName,Parameters\0QVariant\0\0"
    "CodeObject\0IDispatch*\0Name\0QString\0Procedures\0IScriptProcedureCollection*\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject Module::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__Module(),
qt_meta_data_MSScriptControl__Module }
};

void *Module::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__Module()))
        return static_cast<void*>(const_cast<Module*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__Modules[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       6,    10, // methods
       2,    40, // properties
       1,    46, // enums/sets

 // signals: signature, parameters, type, tag, flags
       25, 64, 86, 87, 5,
       88, 113, 118, 119, 5,
       120, 146, 161, 162, 5,

 // slots: signature, parameters, type, tag, flags
       163, 176, 181, 196, 11,
       197, 220, 232, 247, 9,
       248, 263, 269, 284, 9,

 // properties: name, type, flags
       285, 291, 0x02005001, 		 // int Count
       295, 304, 0x00004001, 		 // IUnknown* _NewEnum

 // enums: name, flags, count, data
       314, 0x0, 2, 50, 

 // enum data: key, value
       334, MSScriptControl::Initialized,
       346, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__Modules() {
    static const char stringdata0[] = {
    "MSScriptControl::Modules\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Add(QString)\0Name\0IScriptModule*\0\0Add(QString,QVariant&)\0Name,Object\0"
    "IScriptModule*\0\0Item(QVariant)\0Index\0IScriptModule*\0\0"
    "Count\0int\0_NewEnum\0IUnknown*\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject Modules::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__Modules(),
qt_meta_data_MSScriptControl__Modules }
};

void *Modules::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__Modules()))
        return static_cast<void*>(const_cast<Modules*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__Error[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       4,    10, // methods
       8,    30, // properties
       1,    54, // enums/sets

 // signals: signature, parameters, type, tag, flags
       23, 62, 84, 85, 5,
       86, 111, 116, 117, 5,
       118, 144, 159, 160, 5,

 // slots: signature, parameters, type, tag, flags
       161, 169, 170, 171, 9,

 // properties: name, type, flags
       172, 179, 0x02005001, 		 // int Column
       183, 195, 0x0a005001, 		 // QString Description
       203, 215, 0x02005001, 		 // int HelpContext
       219, 228, 0x0a005001, 		 // QString HelpFile
       236, 241, 0x02005001, 		 // int Line
       245, 252, 0x02005001, 		 // int Number
       256, 263, 0x0a005001, 		 // QString Source
       271, 276, 0x0a005001, 		 // QString Text

 // enums: name, flags, count, data
       284, 0x0, 2, 58, 

 // enum data: key, value
       304, MSScriptControl::Initialized,
       316, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__Error() {
    static const char stringdata0[] = {
    "MSScriptControl::Error\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Clear()\0\0\0\0"
    "Column\0int\0Description\0QString\0HelpContext\0int\0HelpFile\0"
    "QString\0Line\0int\0Number\0int\0Source\0QString\0Text\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject Error::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_MSScriptControl__Error(),
qt_meta_data_MSScriptControl__Error }
};

void *Error::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__Error()))
        return static_cast<void*>(const_cast<Error*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_MSScriptControl__ScriptControl[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       19,    10, // methods
       10,    105, // properties
       1,    135, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 39, 40, 41, 5,
       42, 52, 53, 54, 5,
       55, 94, 116, 117, 5,
       118, 143, 148, 149, 5,
       150, 176, 191, 192, 5,

 // slots: signature, parameters, type, tag, flags
       193, 210, 215, 216, 9,
       217, 247, 259, 260, 11,
       261, 296, 319, 320, 9,
       321, 335, 346, 355, 9,
       356, 382, 392, 393, 9,
       394, 402, 403, 404, 9,
       405, 432, 457, 466, 9,
       467, 484, 492, 493, 9,
       494, 515, 524, 525, 9,
       526, 543, 552, 553, 9,
       554, 584, 590, 591, 9,
       592, 608, 616, 617, 9,
       618, 641, 655, 656, 9,
       657, 669, 670, 671, 9,

 // properties: name, type, flags
       672, 680, 0x01015003, 		 // bool AllowUI
       685, 696, 0x00005001, 		 // IDispatch* CodeObject
       707, 713, 0x00004001, 		 // IScriptError* Error
       727, 736, 0x0a015003, 		 // QString Language
       744, 752, 0x00004001, 		 // IScriptModuleCollection* Modules
       777, 788, 0x00005001, 		 // IScriptProcedureCollection* Procedures
       816, 825, 0x02014003, 		 // int SitehWnd
       829, 835, 0x0201400b, 		 // ScriptControlStates State
       855, 863, 0x02015003, 		 // int Timeout
       867, 881, 0x01015003, 		 // bool UseSafeSubset

 // enums: name, flags, count, data
       886, 0x0, 2, 139, 

 // enum data: key, value
       906, MSScriptControl::Initialized,
       918, MSScriptControl::Connected,

        0        // eod
};

static const char *qt_meta_stringdata_MSScriptControl__ScriptControl() {
    static const char stringdata0[] = {
    "MSScriptControl::ScriptControl\0"
    "Error()\0\0\0\0Timeout()\0\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AddCode(QString)\0Code\0\0\0AddObject(QString,IDispatch*)\0"
    "Name,Object\0\0\0AddObject(QString,IDispatch*,bool)\0Name,Object,AddMembers\0\0\0Eval(QString)\0Expression\0QVariant\0\0ExecuteStatement(QString)\0Statement\0\0\0Reset()\0\0\0\0Run(QString,QVariantList&)\0ProcedureName,Parameters\0"
    "QVariant\0\0SetAllowUI(bool)\0AllowUI\0\0\0SetLanguage(QString)\0Language\0\0\0SetSitehWnd(int)\0SitehWnd\0\0\0SetState(ScriptControlStates)\0State\0\0\0SetTimeout(int)\0Timeout\0\0\0SetUseSafeSubset(bool)\0UseSafeSubset\0\0\0_AboutBox()\0"
    "\0\0\0"
    "AllowUI\0bool\0CodeObject\0IDispatch*\0Error\0IScriptError*\0Language\0QString\0Modules\0IScriptModuleCollection*\0Procedures\0IScriptProcedureCollection*\0SitehWnd\0int\0State\0ScriptControlStates\0Timeout\0int\0UseSafeSubset\0"
    "bool\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_MSScriptControl)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_MSScriptControl, sizeof(qt_meta_enumstringdata_MSScriptControl));
    }

    return data;
};

const QMetaObject ScriptControl::staticMetaObject = {
{ &QWidget::staticMetaObject,
qt_meta_stringdata_MSScriptControl__ScriptControl(),
qt_meta_data_MSScriptControl__ScriptControl }
};

void *ScriptControl::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_MSScriptControl__ScriptControl()))
        return static_cast<void*>(const_cast<ScriptControl*>(this));
    return QAxWidget::qt_metacast(_clname);
}

