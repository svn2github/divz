/****************************************************************************
**
** Metadata for PowerPointViewer generated by dumpcpp from type library
** C:\Program Files\PowerPoint Viewer\msppt8vr.olb
**
****************************************************************************/

#define QAX_DUMPCPP_POWERPOINTVIEWER_NOINLINES
#include "powerpointviewer.h"

using namespace PowerPointViewer;

static const uint qt_meta_data_PowerPointViewer___Application[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       5,    10, // methods
       3,    35, // properties
       2,    44, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 70, 92, 93, 5,
       94, 119, 124, 125, 5,
       126, 152, 167, 168, 5,

 // slots: signature, parameters, type, tag, flags
       169, 227, 254, 269, 9,
       270, 277, 278, 279, 9,

 // properties: name, type, flags
       280, 285, 0x0a005001, 		 // QString Name
       293, 301, 0x0a005001, 		 // QString Version
       309, 317, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       325, 0x0, 5, 52, 
       337, 0x0, 2, 62, 

 // enum data: key, value
       366, PowerPointViewer::ppVTrue,
       374, PowerPointViewer::ppVFalse,
       383, PowerPointViewer::ppVCTrue,
       392, PowerPointViewer::ppVTriStateToggle,
       410, PowerPointViewer::ppVTriStateMixed,
       427, PowerPointViewer::ppViewerSlideShowManualAdvance,
       458, PowerPointViewer::ppViewerSlideShowUseSlideTimings,

        0        // eod
};

static const char qt_meta_enumstringdata_PowerPointViewer[] = {
    "PPVTriState\0PpViewerSlideShowAdvanceMode\0"
    "ppVTrue\0ppVFalse\0ppVCTrue\0ppVTriStateToggle\0ppVTriStateMixed\0"
    "ppViewerSlideShowManualAdvance\0"
    "ppViewerSlideShowUseSlideTimings\0"

};

static const char *qt_meta_stringdata_PowerPointViewer___Application() {
    static const char stringdata0[] = {
    "PowerPointViewer::_Application\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "NewShow(QString,PpViewerSlideShowAdvanceMode,PPVTriState)\0FileName,AdvanceMode,Kiosk\0"
    "SlideShowView*\0\0Quit()\0\0\0\0"
    "Name\0QString\0Version\0QString\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_PowerPointViewer)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_PowerPointViewer, sizeof(qt_meta_enumstringdata_PowerPointViewer));
    }

    return data;
};

const QMetaObject _Application::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_PowerPointViewer___Application(),
qt_meta_data_PowerPointViewer___Application }
};

void *_Application::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_PowerPointViewer___Application()))
        return static_cast<void*>(const_cast<_Application*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_PowerPointViewer__Application[] = {

 // content:
       1,       // revision
       0,       // classname
       1,    10, // classinfo
       5,    12, // methods
       2,    37, // properties
       2,    43, // enums/sets

 // classinfo: key, value
       30, 42, 

 // signals: signature, parameters, type, tag, flags
       55, 94, 116, 117, 5,
       118, 143, 148, 149, 5,
       150, 176, 191, 192, 5,

 // slots: signature, parameters, type, tag, flags
       193, 251, 278, 293, 9,
       294, 301, 302, 303, 9,

 // properties: name, type, flags
       304, 309, 0x0a005001, 		 // QString Name
       317, 325, 0x0a005001, 		 // QString Version

 // enums: name, flags, count, data
       333, 0x0, 5, 51, 
       345, 0x0, 2, 61, 

 // enum data: key, value
       374, PowerPointViewer::ppVTrue,
       382, PowerPointViewer::ppVFalse,
       391, PowerPointViewer::ppVCTrue,
       400, PowerPointViewer::ppVTriStateToggle,
       418, PowerPointViewer::ppVTriStateMixed,
       435, PowerPointViewer::ppViewerSlideShowManualAdvance,
       466, PowerPointViewer::ppViewerSlideShowUseSlideTimings,

        0        // eod
};

static const char *qt_meta_stringdata_PowerPointViewer__Application() {
    static const char stringdata0[] = {
    "PowerPointViewer::Application\0"
    "Interface 0\0_Application\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "NewShow(QString,PpViewerSlideShowAdvanceMode,PPVTriState)\0"
    "FileName,AdvanceMode,Kiosk\0SlideShowView*\0\0Quit()\0\0\0\0"
    "Name\0QString\0Version\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_PowerPointViewer)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_PowerPointViewer, sizeof(qt_meta_enumstringdata_PowerPointViewer));
    }

    return data;
};

const QMetaObject Application::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_PowerPointViewer__Application(),
qt_meta_data_PowerPointViewer__Application }
};

void *Application::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_PowerPointViewer__Application()))
        return static_cast<void*>(const_cast<Application*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_PowerPointViewer__SlideShowView[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       7,    10, // methods
       4,    45, // properties
       2,    57, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 177, 178, 179, 9,
       180, 207, 224, 225, 9,
       226, 233, 234, 235, 9,
       236, 247, 248, 249, 9,

 // properties: name, type, flags
       250, 257, 0x00005001, 		 // IDispatch* Parent
       268, 280, 0x02005001, 		 // int SlideNumber
       284, 296, 0x02005001, 		 // int SlidesCount
       300, 308, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
       316, 0x0, 5, 65, 
       328, 0x0, 2, 75, 

 // enum data: key, value
       357, PowerPointViewer::ppVTrue,
       365, PowerPointViewer::ppVFalse,
       374, PowerPointViewer::ppVCTrue,
       383, PowerPointViewer::ppVTriStateToggle,
       401, PowerPointViewer::ppVTriStateMixed,
       418, PowerPointViewer::ppViewerSlideShowManualAdvance,
       449, PowerPointViewer::ppViewerSlideShowUseSlideTimings,

        0        // eod
};

static const char *qt_meta_stringdata_PowerPointViewer__SlideShowView() {
    static const char stringdata0[] = {
    "PowerPointViewer::SlideShowView\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Exit()\0\0\0\0GotoSlide(int,PPVTriState)\0Index,ResetSlide\0\0\0Next()\0"
    "\0\0\0Previous()\0\0\0\0"
    "Parent\0IDispatch*\0SlideNumber\0int\0SlidesCount\0int\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + sizeof(qt_meta_enumstringdata_PowerPointViewer)];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
        memcpy(data + index, qt_meta_enumstringdata_PowerPointViewer, sizeof(qt_meta_enumstringdata_PowerPointViewer));
    }

    return data;
};

const QMetaObject SlideShowView::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_PowerPointViewer__SlideShowView(),
qt_meta_data_PowerPointViewer__SlideShowView }
};

void *SlideShowView::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_PowerPointViewer__SlideShowView()))
        return static_cast<void*>(const_cast<SlideShowView*>(this));
    return QAxObject::qt_metacast(_clname);
}

